# coding: utf-8
import csv

def get_map(code_file_name):
    code_file = open(code_file_name, 'r')
    return code_file.readlines()

def gen_map(srcfile,dstfile):
    with open(srcfile, 'rw') as src_f:
        i = 0
        global code_num 
        code_num = dict()
        for line in src_f.readlines():
            line = line.strip("\n")
            code_num[line] = i
            i = i+1
            print line
    dst_f = open(dstfile, 'w')
    items = code_num.items()
    items.sort()
    for (k,value) in items:
        out_line = (k + " {:x}\n").format(value)
        print out_line
        dst_f.write(out_line)
    dst_f.close()


def gen_opcodeseq(asm_dir,label_file_name):
    with open(label_file_name) as f:
        f_csv = csv.DictReader(f)
        for row in f_csv:
            print row
            #生成序列文件
            f_asm = open(asm_dir + '/'+row['Id'] + '.asm','r')
            if int(row['Class']) <= 4:
                f_seq = open('../dataset/Benign/'+row['Id']+'.opseq','w')
            else:
                f_seq = open('../dataset/Malware/'+row['Id']+'.opseq','w')
            for line in f_asm.readlines():
                s = ''
                for (k,v) in code_num.items():
                    if line.find('k') != -1:
                        out_line = (s+"{:x}").format(v)
                        s = '\n'
                        f_seq.write(out_line)
            f_seq.close()
            f_asm.close()

    #根据csv将文件放在合适的地方去
    pass

if __name__ == "__main__":
    gen_map('opcodes.txt','IntelOpcodes.txt')
    gen_opcodeseq("subtrain","subtrainLabels.csv")
